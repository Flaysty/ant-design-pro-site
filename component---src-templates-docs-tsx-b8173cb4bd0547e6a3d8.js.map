{"version":3,"sources":["webpack:///./src/components/Content/EditButton.tsx","webpack:///./src/components/Content/AvatarList.tsx","webpack:///./src/components/Content/Article.tsx","webpack:///./src/components/Content/MainContent.tsx","webpack:///./src/templates/docs.tsx"],"names":["EditButton","_ref","title","filename","_ref$sourcePath","sourcePath","react_default","a","createElement","tooltip_default","className","target","rel","href","icon_default","type","AvatarList","render","_this$props$avatarLis","this","props","avatarList","JSON","parse","error","Array","isArray","map","item","key","username","avatar_default","src","url","alt","size","React","Component","Article","componentDidMount","delegation","delegate","node","e","window","ga","delegateTarget","componentWillUnmount","clearTimeout","pingTimer","destroy","_this","content","meta","subtitle","path","modifiedTime","locale","context","intl","Fragment","Helmet","name","ref","Content_EditButton","index_es","id","Content_AvatarList","moment","format","toc","length","affix_default","offsetTop","dangerouslySetInnerHTML","__html","replace","PureComponent","contextTypes","PropTypes","object","isRequired","SubMenu","getModuleDataWithProps","moduleData","menuList","excludedSuffix","isZhCN","location","pathname","filter","includes","isNotTopLevel","level","MainContent","_React$PureComponent","call","getSideBarOpenKeys","nextProps","find","_ref2","slug","handleMenuOpenChange","openKeys","setState","convertFilename","generateMenuItem","_ref3","_ref3$before","before","_ref3$after","after","text","disabled","child","link","gatsby_browser_entry","to","menu_default","Item","important","badge_default","dot","generateSubMenuItems","obj","footerNavIcons","topLevel","bind","_assertThisInitialized","itemGroups","Object","keys","groupItems","sort","b","time","valueOf","order","charCodeAt","concat","_toConsumableArray","getMenuItems","menuItems","_ref5","getPreAndNext","localizedPageData","list","children","reduce","pre","index","findIndex","previous","next","state","componentDidUpdate","componentWillReceiveProps","hash","element","document","getElementById","decodeURIComponent","setTimeout","scrollIntoView","timer","_this$props","isMobile","activeMenuItem","endsWith","substring","currentItem","mainContainerClass","classNames","menuChild","inlineIndent","mode","selectedKeys","onOpenChange","row_default","es","iconChild","wrapperClassName","col_default","xxl","xl","lg","md","sm","xs","Article_Article","assign","span","offset","Template","data","rest","_objectWithoutPropertiesLoose","markdownRemark","allMarkdownRemark","frontmatter","fields","html","tableOfContents","edges","nodeFields","layout","MainContent_MainContent","pageQuery"],"mappings":"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","file":"component---src-templates-docs-tsx-b8173cb4bd0547e6a3d8.js","sourcesContent":["import React from 'react';\nimport { Tooltip, Icon } from 'antd';\n\nconst EditButton: React.FC<{\n  title: React.ReactNode;\n  filename?: string;\n  sourcePath?: string;\n}> = ({\n  title,\n  filename,\n  sourcePath = 'https://github.com/ant-design/ant-design-pro-site/edit/master',\n}) => (\n  <Tooltip title={title}>\n    <a\n      className=\"edit-button\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      href={`${sourcePath}${filename}`}\n    >\n      <Icon type=\"edit\" />\n    </a>\n  </Tooltip>\n);\n\nexport default EditButton;\n","import React from 'react';\nimport { Avatar, Tooltip } from 'antd';\n\nclass AvatarList extends React.Component<{\n  avatarList: {\n    username: string;\n    url: string;\n  }[];\n}> {\n  main: HTMLDivElement | null;\n\n  render() {\n    let { avatarList = [] } = this.props;\n    try {\n      avatarList = JSON.parse((avatarList as unknown) as string);\n    } catch (error) {\n      // do not need\n    }\n    if (!avatarList || !Array.isArray(avatarList)) {\n      return null;\n    }\n    return (\n      <div className=\"doc-avatar-list\">\n        {avatarList.map(item => (\n          <a\n            className=\"href-box\"\n            target=\"_blank\"\n            key={item.username}\n            rel=\"noopener noreferrer\"\n            href={`http://github.com/${item.username}`}\n          >\n            <Tooltip title={item.username}>\n              <Avatar src={item.url} alt={item.username} size=\"small\" />\n            </Tooltip>\n          </a>\n        ))}\n      </div>\n    );\n  }\n}\nexport default AvatarList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { Helmet } from 'react-helmet';\nimport { Affix } from 'antd';\nimport delegate from 'delegate';\nimport moment from 'moment';\nimport EditButton from './EditButton';\nimport { IFrontmatterData } from '../../templates/docs';\nimport AvatarList from './AvatarList';\n\ninterface ArticleProps {\n  content: {\n    meta: IFrontmatterData;\n    toc: string | false;\n    content: string;\n  };\n}\n\nexport default class Article extends React.PureComponent<ArticleProps> {\n  delegation: any;\n\n  pingTimer: number;\n\n  node: HTMLElement | null | undefined;\n\n  static contextTypes = {\n    intl: PropTypes.object.isRequired,\n  };\n\n  componentDidMount() {\n    // Add ga event click\n    this.delegation = delegate(\n      this.node,\n      '.resource-card',\n      'click',\n      (e: { delegateTarget: { href: any } }) => {\n        if ((window as any).ga) {\n          (window as any).ga('send', 'event', 'Download', 'resource', e.delegateTarget.href);\n        }\n      },\n      false,\n    );\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.pingTimer);\n    if (this.delegation) {\n      this.delegation.destroy();\n    }\n  }\n\n  render() {\n    const { props } = this;\n    const { content } = props;\n    const { meta } = content;\n    const { title, subtitle, path, modifiedTime, avatarList } = meta;\n    const {\n      intl: { locale },\n    } = this.context as {\n      intl: {\n        locale: 'zh-CN' | 'en-US';\n      };\n    };\n    return (\n      <>\n        <Helmet>\n          <title>{`${title} - Ant Design Pro`}</title>\n          <meta name=\"description\" content={title} />\n        </Helmet>\n        <article\n          className=\"markdown\"\n          ref={node => {\n            this.node = node;\n          }}\n        >\n          <h1>\n            {title}\n            {!subtitle || locale === 'en-US' ? null : <span className=\"subtitle\">{subtitle}</span>}\n            <EditButton title={<FormattedMessage id=\"app.content.edit-page\" />} filename={path} />\n          </h1>\n\n          <div className=\"modifiedTime\">\n            <AvatarList avatarList={avatarList} />\n            <FormattedMessage id=\"app.content.modifiedTime\" />\n            {moment(modifiedTime).format('YYYY-MM-DD HH:mm:SS')}\n          </div>\n\n          {!content.toc || content.toc.length <= 1 || meta.toc === false ? null : (\n            <Affix className=\"toc-affix\" offsetTop={16}>\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: content.toc.replace(/<ul>/g, '<ul class=\"toc\">').replace(/\\/#/g, '#'),\n                }}\n              />\n            </Affix>\n          )}\n          <section\n            className=\"markdown api-container\"\n            dangerouslySetInnerHTML={{ __html: content.content }}\n          />\n        </article>\n      </>\n    );\n  }\n}\n","/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport { Badge, Row, Col, Menu, Icon } from 'antd';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport MobileMenu from 'rc-drawer-menu';\nimport moment from 'moment';\nimport Article from './Article';\nimport { isZhCN, getMenuItems, MenuDataItem, IMenuData } from '../utils';\nimport { IFrontmatterData } from '../../templates/docs';\n\nconst { SubMenu } = Menu;\n\nexport interface MainContentProps {\n  isMobile: boolean;\n  location: {\n    pathname: string;\n  };\n  menuList: MenuDataItem[];\n  localizedPageData: {\n    meta: IFrontmatterData;\n    toc: string | false;\n    content: string;\n  };\n}\n\ninterface MainContentState {\n  openKeys: string[];\n}\n\nfunction getActiveMenuItem(props: MainContentProps) {\n  const { pathname } = props.location;\n  if (pathname.endsWith('/')) {\n    return pathname.substring(0, pathname.length - 1);\n  }\n  return pathname;\n}\n\nfunction getModuleDataWithProps(props: MainContentProps) {\n  const moduleData = props.menuList;\n  const excludedSuffix = isZhCN(props.location.pathname) ? 'zh-CN' : 'en-US';\n  return moduleData.filter(({ filename }) => {\n    if (!filename) {\n      return false;\n    }\n    return filename.includes(excludedSuffix);\n  });\n}\n\nfunction isNotTopLevel(level: string) {\n  return level !== 'topLevel';\n}\n\nexport default class MainContent extends React.PureComponent<MainContentProps, MainContentState> {\n  timer: number;\n\n  currentModule: string;\n\n  static contextTypes = {\n    intl: PropTypes.object.isRequired,\n  };\n\n  constructor(props: MainContentProps) {\n    super(props);\n    this.state = {\n      openKeys: this.getSideBarOpenKeys(props) || [],\n    };\n  }\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  componentWillReceiveProps(nextProps: MainContentProps) {\n    const openKeys = this.getSideBarOpenKeys(nextProps);\n    if (openKeys) {\n      this.setState({\n        openKeys,\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    if (!window.location.hash) {\n      return;\n    }\n    const element = document.getElementById(\n      decodeURIComponent(window.location.hash.replace('#', '')),\n    );\n    setTimeout(() => {\n      if (element) {\n        element.scrollIntoView(true);\n      }\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  getSideBarOpenKeys = (nextProps: MainContentProps) => {\n    const { pathname } = nextProps.location;\n    const moduleData = getModuleDataWithProps(nextProps);\n    const item = moduleData.find(({ slug }) => pathname.includes(slug));\n    if (item) {\n      return [item.type];\n    }\n    return [];\n  };\n\n  handleMenuOpenChange = (openKeys: string[]) => {\n    this.setState({\n      openKeys,\n    });\n  };\n\n  convertFilename = (filename: string) => {\n    const {\n      location: { pathname },\n    } = this.props;\n    if (isZhCN(pathname) && !filename.includes('-cn')) {\n      return `${filename}-cn`;\n    }\n    return filename;\n  };\n\n  generateMenuItem = ({ before = null, after = null }, item: MenuDataItem) => {\n    if (!item.title) {\n      return null;\n    }\n    const {\n      intl: { locale },\n    } = this.context as {\n      intl: {\n        locale: 'zh-CN' | 'en-US';\n      };\n    };\n    const text = [\n      <span key=\"english\">{item.title}</span>,\n      <span className=\"chinese\" key=\"chinese\">\n        {locale === 'zh-CN' && item.subtitle}\n      </span>,\n    ];\n\n    const { disabled } = item;\n\n    const child = !item.link ? (\n      <Link to={this.convertFilename(item.filename)}>\n        {before}\n        {text}\n        {after}\n      </Link>\n    ) : (\n      <a\n        href={item.link}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"menu-item-link-outside\"\n      >\n        {before}\n        {text} <Icon type=\"export\" />\n        {after}\n      </a>\n    );\n\n    return (\n      <Menu.Item key={this.convertFilename(item.filename)} disabled={disabled}>\n        {item.important ? <Badge dot={item.important}>{child}</Badge> : child}\n      </Menu.Item>\n    );\n  };\n\n  generateSubMenuItems = (obj?: IMenuData, footerNavIcons = {}) => {\n    if (!obj) return [];\n    const topLevel = ((obj.topLevel as MenuDataItem[]) || []).map(\n      this.generateMenuItem.bind(this, footerNavIcons),\n    );\n    const itemGroups = Object.keys(obj)\n      .filter(isNotTopLevel)\n      .map(type => {\n        const groupItems = (obj[type] as MenuDataItem[])\n          .sort((a, b) => {\n            if ('time' in a && 'time' in b) {\n              return moment(b.time).valueOf() - moment(a.time).valueOf();\n            }\n            if ('order' in a && 'order' in b) {\n              return a.order - b.order;\n            }\n            return a.title.charCodeAt(0) - b.title.charCodeAt(0);\n          })\n          .map(this.generateMenuItem.bind(this, footerNavIcons));\n        return (\n          <SubMenu title={type} key={type}>\n            {groupItems}\n          </SubMenu>\n        );\n      });\n    return [...topLevel, ...itemGroups];\n  };\n\n  getMenuItems = (footerNavIcons = {}) => {\n    const moduleData = getModuleDataWithProps(this.props);\n    const {\n      intl: { locale },\n    } = this.context;\n    const menuItems: IMenuData = getMenuItems(moduleData, locale) || {};\n    const topLevel =\n      this.generateSubMenuItems(menuItems.topLevel as IMenuData, footerNavIcons) || [];\n\n    const result = [...topLevel].filter(({ key }) => key);\n    return result;\n  };\n\n  getPreAndNext = (menuItems: any) => {\n    const {\n      localizedPageData: {\n        meta: { filename },\n      },\n    } = this.props;\n\n    const list =\n      menuItems.length && !menuItems[0].props.children.length\n        ? menuItems\n        : Object.keys(menuItems).reduce(\n            (pre, key) => pre.concat(menuItems[key].props.children),\n            [],\n          );\n    const index = list.findIndex(\n      (item: { key: string }) => item.key === filename || item.key === `${filename}-cn`,\n    );\n\n    if (index === -1) {\n      return {};\n    }\n    return {\n      previous: list[index - 1],\n      next: list[index + 1],\n    };\n  };\n\n  render() {\n    const { localizedPageData, isMobile } = this.props;\n\n    const activeMenuItem = getActiveMenuItem(this.props);\n    const menuItems = this.getMenuItems();\n\n    const currentItem = this.getPreAndNext(menuItems);\n    const { next, previous } = currentItem;\n    const mainContainerClass = classNames('main-container', {});\n    const { openKeys } = this.state;\n    const menuChild = (\n      <Menu\n        inlineIndent={16}\n        className=\"aside-container\"\n        mode=\"inline\"\n        openKeys={openKeys}\n        selectedKeys={[activeMenuItem]}\n        onOpenChange={this.handleMenuOpenChange}\n      >\n        {menuItems}\n      </Menu>\n    );\n    return (\n      <div className=\"main-wrapper\">\n        <Row>\n          {isMobile ? (\n            <MobileMenu\n              iconChild={[<Icon type=\"menu-unfold\" />, <Icon type=\"menu-fold\" />]}\n              key=\"mobile-menu\"\n              wrapperClassName=\"drawer-wrapper\"\n            >\n              {menuChild}\n            </MobileMenu>\n          ) : (\n            <Col xxl={4} xl={5} lg={6} md={24} sm={24} xs={24} className=\"main-menu\">\n              {menuChild}\n            </Col>\n          )}\n          <Col xxl={20} xl={19} lg={18} md={24} sm={24} xs={24}>\n            <div className={mainContainerClass}>\n              <Article {...this.props} content={localizedPageData} />\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={{ span: 20, offset: 4 }} md={24} sm={24} xs={24}>\n            <section className=\"prev-next-nav\">\n              {previous ? (\n                <div className=\"prev-page\">\n                  <Icon className=\"footer-nav-icon-before\" type=\"left\" />\n                  {previous.props.children}\n                </div>\n              ) : null}\n              {next ? (\n                <div className=\"next-page\">\n                  {next.props.children}\n                  <Icon className=\"footer-nav-icon-after\" type=\"right\" />\n                </div>\n              ) : null}\n            </section>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport WrapperLayout from '../components/layout';\nimport MainContent from '../components/Content/MainContent';\n\ninterface IMarkDownFields {\n  path: string;\n  slug: string;\n  modifiedTime: number;\n  avatarList: {\n    url: string;\n    username: string;\n  }[];\n}\nexport interface IFrontmatterData extends IMarkDownFields {\n  title: string;\n  time: string;\n  toc: string | boolean;\n  order: number;\n  type: string;\n  filename: string;\n  subtitle: string;\n  path: string;\n  disabled: boolean;\n  important: boolean;\n  next: {\n    frontmatter: IGraphqlFrontmatterData;\n    fields: IMarkDownFields;\n  };\n  previous: { frontmatter: IGraphqlFrontmatterData; fields: IMarkDownFields };\n}\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\nexport interface IGraphqlFrontmatterData extends Omit<IFrontmatterData, 'title'> {\n  title: string;\n}\n\nexport interface IMarkdownRemarkData {\n  html: string;\n  tableOfContents: string;\n  frontmatter: IGraphqlFrontmatterData;\n  fields: IMarkDownFields;\n}\n\nexport interface IAllMarkdownRemarkData {\n  edges: {\n    node: {\n      frontmatter: IGraphqlFrontmatterData;\n      fields: IMarkDownFields;\n    };\n    next: {\n      frontmatter: IGraphqlFrontmatterData;\n      fields: IMarkDownFields;\n    };\n    previous: { frontmatter: IGraphqlFrontmatterData; fields: IMarkDownFields };\n  }[];\n}\n\nexport default function Template({\n  data,\n  ...rest\n}: {\n  data: { markdownRemark: IMarkdownRemarkData; allMarkdownRemark: IAllMarkdownRemarkData };\n  isMobile: boolean;\n  location: {\n    pathname: string;\n  };\n}) {\n  const { markdownRemark, allMarkdownRemark } = data;\n  const { frontmatter, fields, html, tableOfContents } = markdownRemark;\n  const { edges } = allMarkdownRemark;\n  const menuList = edges.map(({ node, next, previous }) => {\n    const { fields: nodeFields } = node;\n\n    return {\n      slug: nodeFields.slug,\n      meta: {\n        ...node.frontmatter,\n        slug: nodeFields.slug,\n        filename: nodeFields.slug,\n      },\n      ...node.frontmatter,\n      filename: nodeFields.path,\n      next,\n      previous,\n    };\n  });\n  return (\n    <WrapperLayout {...rest}>\n      <MainContent\n        {...rest}\n        localizedPageData={{\n          meta: {\n            ...frontmatter,\n            ...fields,\n            filename: fields.slug,\n            path: fields.path,\n          },\n          toc: tableOfContents,\n          content: html,\n        }}\n        menuList={menuList}\n      />\n    </WrapperLayout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query TemplateDocsMarkdown($slug: String!, $type: String!, $locale: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      tableOfContents(maxDepth: 3)\n      frontmatter {\n        title\n        order\n        type\n      }\n      fields {\n        path\n        slug\n        modifiedTime\n        avatarList\n      }\n    }\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: $type }, fields: { slug: { regex: $locale } } }\n      sort: { fields: [frontmatter___order, frontmatter___type, frontmatter___time], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            order\n            type\n            time\n          }\n          fields {\n            slug\n            path\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}